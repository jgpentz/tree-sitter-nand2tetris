{
  "name": "hackasm",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_definition"
      }
    },
    "_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "label"
        },
        {
          "type": "SYMBOL",
          "name": "c_instruction"
        }
      ]
    },
    "label": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "FIELD",
              "name": "label_name",
              "content": {
                "type": "SYMBOL",
                "name": "identifier"
              }
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "@"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "FIELD",
                  "name": "label_name",
                  "content": {
                    "type": "SYMBOL",
                    "name": "identifier"
                  }
                },
                {
                  "type": "SYMBOL",
                  "name": "number"
                },
                {
                  "type": "SYMBOL",
                  "name": "builtin_symbols"
                }
              ]
            }
          ]
        }
      ]
    },
    "c_instruction": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "builtin_regs"
                  },
                  {
                    "type": "STRING",
                    "value": "="
                  }
                ]
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "jump_expression"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "builtin_regs"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "unary_expression"
        },
        {
          "type": "SYMBOL",
          "name": "binary_expression"
        }
      ]
    },
    "unary_expression": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "-"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "!"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        ]
      }
    },
    "binary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 6,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "STRING",
                "value": "+"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 5,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "STRING",
                "value": "-"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 4,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "STRING",
                "value": "&"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 3,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "STRING",
                "value": "|"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        }
      ]
    },
    "jump_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ";"
        },
        {
          "type": "SYMBOL",
          "name": "conditionals"
        }
      ]
    },
    "builtin_regs": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "null"
        },
        {
          "type": "STRING",
          "value": "M"
        },
        {
          "type": "STRING",
          "value": "D"
        },
        {
          "type": "STRING",
          "value": "A"
        },
        {
          "type": "STRING",
          "value": "MD"
        },
        {
          "type": "STRING",
          "value": "AM"
        },
        {
          "type": "STRING",
          "value": "AD"
        },
        {
          "type": "STRING",
          "value": "AMD"
        }
      ]
    },
    "conditionals": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "JGT"
        },
        {
          "type": "STRING",
          "value": "JLE"
        },
        {
          "type": "STRING",
          "value": "JEQ"
        },
        {
          "type": "STRING",
          "value": "JLT"
        },
        {
          "type": "STRING",
          "value": "JNE"
        },
        {
          "type": "STRING",
          "value": "JMP"
        },
        {
          "type": "STRING",
          "value": "JGE"
        }
      ]
    },
    "builtin_symbols": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "R0"
        },
        {
          "type": "STRING",
          "value": "R1"
        },
        {
          "type": "STRING",
          "value": "R2"
        },
        {
          "type": "STRING",
          "value": "R3"
        },
        {
          "type": "STRING",
          "value": "R4"
        },
        {
          "type": "STRING",
          "value": "R5"
        },
        {
          "type": "STRING",
          "value": "R6"
        },
        {
          "type": "STRING",
          "value": "R7"
        },
        {
          "type": "STRING",
          "value": "R8"
        },
        {
          "type": "STRING",
          "value": "R9"
        },
        {
          "type": "STRING",
          "value": "R10"
        },
        {
          "type": "STRING",
          "value": "R11"
        },
        {
          "type": "STRING",
          "value": "R12"
        },
        {
          "type": "STRING",
          "value": "R13"
        },
        {
          "type": "STRING",
          "value": "R14"
        },
        {
          "type": "STRING",
          "value": "R15"
        },
        {
          "type": "STRING",
          "value": "SP"
        },
        {
          "type": "STRING",
          "value": "LCL"
        },
        {
          "type": "STRING",
          "value": "ARG"
        },
        {
          "type": "STRING",
          "value": "THIS"
        },
        {
          "type": "STRING",
          "value": "THAT"
        },
        {
          "type": "STRING",
          "value": "SCREEN"
        },
        {
          "type": "STRING",
          "value": "KBD"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[\\w_-]+"
    },
    "number": {
      "type": "PATTERN",
      "value": "-?\\d+"
    },
    "operator": {
      "type": "PATTERN",
      "value": "(?:\\+|-|&|\\|)?"
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "//"
              },
              {
                "type": "PATTERN",
                "value": "(\\\\+(.|\\r?\\n)|[^\\\\\\n])*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "/*"
              },
              {
                "type": "PATTERN",
                "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
              },
              {
                "type": "STRING",
                "value": "/"
              }
            ]
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s|\\r?\\n"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

